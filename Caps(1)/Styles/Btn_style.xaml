<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <!-- MainWindows -->
    <Style x:Key="Manual_Mode_style" TargetType="ToggleButton">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Background" Value="White"/>
        <!-- 배경색을 흰색으로 유지 -->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <!-- 마우스 오버 시 배경색 유지 -->
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="White"/>
                <!-- 마우스 캡처 시 배경색 유지 -->
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <!-- 토글된 상태 -->
                <Setter Property="Background" Value="White"/>
                <!-- 토글 시에도 배경색 유지 -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Manual_Mode_image" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="LightGray"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                <Setter Property="Foreground" Value="#6A65FD"/>
                <!-- 토글된 상태의 아이콘 색상 -->
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#6A65FD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Foreground" Value="#6A65FD"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Mode_Change Toggle Button -->
    <Style x:Key="Mode_Change_Button" TargetType="ToggleButton">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFE6E6F0"/>
        <Setter Property="Margin" Value="1, 0, 0, 0"/>
        <!-- 이거 없으면 색 안바뀜 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFDBE0F7"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#FFDBE0F7"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>
    
    <!--Mene Button -->
    <Style x:Key="menuBtn" TargetType="RadioButton">
        <!-- Nomal button style -->
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="-5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource gray}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Button style on hover -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Height" Value="65"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource darkpurple}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource self}}"/>
            </Trigger>

            <!-- Active button style -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Height" Value="65"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource darkpurple}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource white}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Mene button icon -->
    <Style x:Key="menuBtnIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="5,0,30,0"/>
    </Style>

    <!--Menu button text -->
    <Style x:Key="menuBtnText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Setting Page -->
    
        <!-- Calendar Left/Right Button -->
        <Style x:Key="L_angle" TargetType="fa:IconImage">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0 3 0 0"/>
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Height" Value="26"/>
                    <Setter Property="Width" Value="26"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Height" Value="26"/>
                    <Setter Property="Width" Value="26"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Calendar Purple Left/Right Button -->
        <Style x:Key="LR" TargetType="Button">
            <Setter Property="Foreground" Value="#C7C6FF"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{x:Null}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
            
        </Style>
       
        <Style x:Key="R_angle" TargetType="fa:IconImage">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Foreground" Value="White"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Note Plus Button -->
    <Style x:Key="Cir_Plus" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Note Pluse Button Image -->
    <Style x:Key="Plus_image" TargetType="fa:IconImage">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0 3 0 0"/>
        <Setter Property="Foreground" Value="White"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Height" Value="28"/>
                <Setter Property="Width" Value="28"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Height" Value="28"/>
                <Setter Property="Width" Value="28"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Note Block -->
    <Style x:Key="NoteTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>    <!-- 블럭 안 글자 색 -->
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Margin" Value="20 0 0 0 "/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Note Box -->
    <Style x:Key="NoteTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{x:Null}"/>    <!-- 글자 박스 색 -->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="20 0 0 0 "/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- Data Page -->
    
        <!-- Go List/Graph -->
    <Style x:Key="Go_List/Graph" TargetType="Button">
        <Setter Property="Background" Value="#D6D1FF"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    CornerRadius="4 4 4 4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Width" Value="65"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Separator -->
    <Style x:Key="Separator_List/Graph" TargetType="Separator">
        <Setter Property="Background" Value="white"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!-- State Page -->
    
        <!--Cylinder Operation -->
        <Style x:Key="Cylinder_ON_OFF" TargetType="ToggleButton">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{x:Null}"/>
        </Style>

        <Style x:Key="Cylinder_ONOFF_Image" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="#FFB9C6EE"/>
        </Style>
    
        <!-- Next Page Button -->
        <Style x:Key="Cylinder_Next_Page" TargetType="Button">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Background" Value="#D6D1FF"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="15 15 4 4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

        <!-- Next Page Button Image -->
        <Style x:Key="Cylinder_Next_Page_Image" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#FAF5FF"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#6A65FD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Foreground" Value="#6A65FD"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Stimulation -->
    <Style x:Key="fruit_btn" TargetType="Button">
        <!-- Nomal button style -->
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="#FFEDEDFF"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource gray}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>            

            <!-- Active button style -->
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Width" Value="80"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Background" Value="{StaticResource darkpurple}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource white}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>